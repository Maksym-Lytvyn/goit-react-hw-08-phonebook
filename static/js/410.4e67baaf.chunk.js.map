{"version":3,"file":"static/js/410.4e67baaf.chunk.js","mappings":"gRA+HA,EA1HiB,WACf,IAAMA,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACA,GAA0BN,EAAAA,EAAAA,UAAS,IAAnC,eAAOO,EAAP,KAAcC,EAAd,KAEMC,EAAe,SAACC,GACpB,MAAwBA,EAAMC,OAAtBV,EAAR,EAAQA,KAAMW,EAAd,EAAcA,MACd,OAAQX,GACN,IAAK,OACHC,EAAQU,GACR,MAEF,IAAK,QACHR,EAASQ,GACT,MAEF,IAAK,WACHN,EAAYM,GACZ,MAEF,QACE,OAEL,EAEKC,EAAY,mCAAG,WAAOH,GAAP,oEACnBA,EAAMI,iBAEDb,GAASE,GAAUE,EAHL,uBAIjBG,EAAS,6BAJQ,mDASXV,GAASiB,EAAAA,EAAAA,IAAO,CAAEd,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KATpB,OAWjBH,EAAQ,IACRE,EAAS,IACTE,EAAY,IAbK,kDAejBE,EAAS,8CAfQ,0DAAH,sDAmBlB,OACE,0BACE,iBACIQ,MAAO,CACLC,OAAQ,QACRC,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,WAAY,SACZC,MAAO,UACPC,gBAAgB,OAAD,OAASC,EAAT,KACfC,eAAgB,QAChBC,WAAY,QACZC,mBAAoB,UAX1B,WAcE,eAAIX,MAAO,CAACM,MAAO,SAAnB,SAA6B,iEAI5Bf,IACC,uBACGA,KAIL,kBACEqB,UAAU,OACVC,SAAUhB,EACViB,aAAa,KACbd,MAAO,CACLE,QAAS,OACTC,cAAe,SACfY,MAAO,OACPC,SAAU,KARd,WAWE,kBACEC,KAAK,OACLhC,KAAK,OACLW,MAAOX,EACPiC,SAAUzB,EACV0B,MAAM,OACNC,YAAY,iEACZC,UAAQ,KAGV,kBACEJ,KAAK,QACLhC,KAAK,QACLW,MAAOT,EACP+B,SAAUzB,EACV0B,MAAM,QACNC,YAAY,sMACZC,UAAQ,KAGV,kBACEJ,KAAK,WACLhC,KAAK,WACLW,MAAOP,EACP6B,SAAUzB,EACV0B,MAAM,WACNC,YAAY,kFACZC,UAAQ,KAGV,mBAAQJ,KAAK,SAASjB,MAAO,CAAEsB,gBAAiB,SAAUhB,MAAO,QAASS,MAAO,IAAKd,OAAQ,GAAIsB,SAAU,IAA5G,SAAiH,sGAO1H,EClHD,EATqB,WAEjB,OACI,0BACI,SAAC,EAAD,KAGX,C","sources":["components/Register/Register.jsx","pages/RegisterPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { signUp } from '../../redux/auth/operations';\nimport background from '../../images/background.jpg';\n\nconst Register = () => {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'email':\n        setEmail(value);\n        break;\n\n      case 'password':\n        setPassword(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    if (!name || !email || !password) {\n      setError('Please fill in all fields');\n      return;\n    }\n\n    try {\n      await dispatch(signUp({ name, email, password }));\n\n      setName('');\n      setEmail('');\n      setPassword('');\n    } catch (error) {\n      setError('An error occurred. Please try again later.');\n    }\n  };\n\n  return (\n    <div >\n      <div\n          style={{\n            height: '100vh',\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            alignItems: 'center',\n            color: '#010101',\n            backgroundImage: `url(${background})`,\n            backgroundSize: 'cover',\n            resizeMode: 'cover',\n            backgroundPosition: 'center',\n          }}\n      >\n        <h4 style={{color: 'white'}}>\n          Реєстрація\n        </h4>\n\n        {error && (\n          <p>\n            {error}\n          </p>\n        )}\n\n        <form\n          component=\"form\"\n          onSubmit={handleSubmit}\n          autoComplete=\"on\"\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n            width: '100%',\n            maxWidth: 400,\n          }}\n        >\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            label=\"Name\"\n            placeholder=\"Введіть ім'я\"\n            required\n          />\n\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n            label=\"Email\"\n            placeholder=\"Введіть адресу електронної скриньки\"\n            required\n          />\n\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n            label=\"Password\"\n            placeholder=\"Введіть пароль\"\n            required\n          />\n\n          <button type=\"submit\" style={{ backgroundColor: 'purple', color: 'white', width: 400, height: 30, fontSize: 22}}>\n            Зареєструватися\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Register;\n","import Register from \"components/Register/Register\";\n\nconst RegisterPage = () => {\n\n    return (\n        <div>\n            <Register />\n        </div>\n    );\n}\n\nexport default RegisterPage;"],"names":["dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","error","setError","handleChange","event","target","value","handleSubmit","preventDefault","signUp","style","height","display","flexDirection","justifyContent","alignItems","color","backgroundImage","background","backgroundSize","resizeMode","backgroundPosition","component","onSubmit","autoComplete","width","maxWidth","type","onChange","label","placeholder","required","backgroundColor","fontSize"],"sourceRoot":""}