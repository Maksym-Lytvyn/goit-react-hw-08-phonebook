{"version":3,"file":"static/js/495.e73b0f86.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactItem/DeleteConfirmation/DeleteConfirmation.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/ContactsPage.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.contacts;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectStatusFilter = state => state.filter;","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/operations';\nimport Notiflix from 'notiflix';\nimport { selectContacts, selectError } from '../../redux/contacts/selectors';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(selectContacts);\n  const error = useSelector(selectError);\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    name === 'name' ? setName(value) : setNumber(value);\n  };\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (name.trim() !== '' && number.trim() !== '') {\n      const isExistingContact = contacts.some(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      );\n\n      if (isExistingContact) {\n        Notiflix.Notify.failure(`${name} вже додано до контактів.`);\n        return;\n      }\n\n      if (error) {\n        Notiflix.Notify.failure('Не вдалося отримати контакти. Спробуйте ще');\n        return;\n      }\n\n      dispatch(addContact({ name, number }));\n      Notiflix.Notify.success(`${name} Додано до переліку контактів.`);\n      reset();\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          maxWidth: '400px',\n          margin: '0 auto',\n          justifyContent: 'center',\n          color: '#010101',\n          marginLeft: 850\n        }}\n      >\n        {error && (\n          <div>Не вдалося завантажити контакти. Спробуйте пізніше...</div>\n        )}\n\n        <form onSubmit={handleSubmit} style={{ width: '100%' }}>\n          <input\n            type=\"text\"\n            name=\"name\"\n            label=\"Name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            value={name}\n            onChange={handleInputChange}\n            required\n          />\n\n          <br />\n\n          <input\n            type=\"tel\"\n            name=\"number\"\n            label=\"Number\"\n            pattern=\"\\+?\\d{1,4}?[\\-.\\s]?\\(?\\d{1,3}?\\)?[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            value={number}\n            onChange={handleInputChange}\n            required\n          />\n\n          <br />\n          <br />\n          <button type=\"submit\" style={{ backgroundColor: 'green', color: 'white', width: 150, height: 30, fontSize: 22}}>\n            Додати\n          </button>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport Notiflix from 'notiflix';\n\n\nconst DeleteConfirmation = ({ contact, onCancel }) => {\n  const dispatch = useDispatch();\n\n  const handleConfirmDelete = () => {\n    dispatch(deleteContact(contact.id));\n    if (deleteContact) {\n      Notiflix.Notify.success(`Контакт: ${contact.name} видалено`);\n    }\n    onCancel();\n  };\n\n  return (\n    <div style={{ position: 'fixed', top: 0, left: 0, width: '100%', height: '100%', backgroundColor: 'rgba(0, 0, 0, 0.5)', display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\n      <div style={{ backgroundColor: 'purple', padding: 20, borderRadius: 4, color: 'white' }}>\n        <div>Are you sure you want to delete this contact?</div>\n        <div style={{ display: 'flex', justifyContent: 'flex-end', marginTop: 20 }}>\n          <button style={{marginLeft: 10, backgroundColor: 'red', color: 'white'}} onClick={handleConfirmDelete}>\n            Видалити\n          </button>\n          <button style={{marginLeft: 10}} onClick={onCancel}>\n            Скасувати\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DeleteConfirmation;\n\n\n\n\n","import React, { useState } from 'react';\nimport DeleteConfirmation from 'components/ContactItem/DeleteConfirmation/DeleteConfirmation';\n\nconst ContactItem = ({ contact }) => {\n  const [isConfirmingDelete, setIsConfirmingDelete] = useState(false);\n\n  const handleDeleteClick = () => {\n    setIsConfirmingDelete(true);\n  };\n\n  const handleCancelDelete = () => {\n    setIsConfirmingDelete(false);\n  };\n\n  return (\n    <div style={{ marginBottom: '10px', display: 'flex' }}>\n      <div style={{ display: 'flex', alignItems: 'center' }}>\n        <h6 style={{ color: 'purple', fontSize: 16 }}>{contact.name}</h6>\n      </div>\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <p style={{ color: 'white', fontSize: 16, marginLeft: 20 }}>{contact.number}</p>\n      <button\n        color=\"error\"\n        onClick={handleDeleteClick}\n        style={{\n          backgroundColor: 'red',\n          color: 'white',\n          width: 150,\n          height: 30,\n          fontSize: 22,\n          marginLeft: 20,\n        }}\n      >\n        Видалити\n      </button>  \n      </div>\n      \n\n      {isConfirmingDelete && (\n        <DeleteConfirmation contact={contact} onCancel={handleCancelDelete} />\n      )}\n    </div>\n  );\n};\n\nexport default ContactItem;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport ContactItem from 'components/ContactItem/ContactItem';\nimport {\n  selectContacts,\n  selectStatusFilter,\n  selectIsLoading,\n} from '../../redux/contacts/selectors';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectStatusFilter);\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  if (!contacts) {\n    return <div>Go</div>;\n  }\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        maxWidth: '400px',\n        margin: '0 auto',\n        justifyContent: 'center',\n        color: '#010101',\n      }}\n    >\n      <h5 style={{color: 'white', fontSize: 16}}>Додані контакти:</h5>\n      <ul>\n        {filteredContacts.map(contact => (\n          <ContactItem key={contact.id} contact={contact} />\n        ))}\n      </ul>\n      {isLoading && (\n        <div\n          style={{ display: 'flex', justifyContent: 'center', marginTop: 20 }}\n        >\n          <p style={{ marginLeft: 10 }}>Оновлюємо...</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ContactList;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilterChange = event => {\n    const filterValue = event.target.value;\n    dispatch(setFilter(filterValue));\n  };\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        maxWidth: '400px',\n        margin: '0 auto',\n        justifyContent: 'center',\n        color: '#010101',\n      }}\n    >\n      <p style={{ color: 'white', fontSize: 16 }}>Шукати контакт за іменем:</p>\n      <input\n        type=\"text\"\n        onChange={handleFilterChange}\n        placeholder=\"Пошук\"\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","import ContactsForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport overlayBackground from '../images/overlayBackground.jpg'\n\nconst ContactsPage = () => {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        gap: '1rem',\n        padding: '1rem',\n        height: '100vh',\n        backgroundImage: `url(${overlayBackground})`,\n        backgroundSize: 'cover',\n        resizeMode: 'cover',\n        backgroundPosition: 'center',\n      }}\n    >\n      <section>\n        <ContactsForm />\n      </section>\n      <section>\n        <Filter />\n      </section>\n      <section>\n        <ContactList />\n      </section>\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["selectContacts","state","contacts","selectIsLoading","isLoading","selectError","error","selectStatusFilter","filter","useState","name","setName","number","setNumber","useSelector","handleInputChange","event","target","value","dispatch","useDispatch","reset","style","display","flexDirection","alignItems","maxWidth","margin","justifyContent","color","marginLeft","onSubmit","preventDefault","trim","some","contact","toLowerCase","Notiflix","addContact","width","type","label","pattern","title","onChange","required","backgroundColor","height","fontSize","onCancel","position","top","left","padding","borderRadius","marginTop","onClick","deleteContact","id","isConfirmingDelete","setIsConfirmingDelete","marginBottom","useEffect","fetchContacts","filteredContacts","includes","map","filterValue","setFilter","placeholder","gap","backgroundImage","overlayBackground","backgroundSize","resizeMode","backgroundPosition"],"sourceRoot":""}